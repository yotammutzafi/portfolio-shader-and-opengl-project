#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNorm;
layout (location = 2) in vec2 aTex;



out vec4 FragPos;
out vec3 Normal;
out vec2 Tex;
out vec3 ViewPos;

layout (std140) uniform Matrices
{
    mat4 model;
    mat4 view;
    mat4 projection;
};






void main()
{
    gl_Position =projection*view*model*vec4(aPos.x,aPos.y,aPos.z, 1.0); 
    Tex  = aTex;
    FragPos  = model*vec4(aPos.x,aPos.y,aPos.z, 1.0);
    
    Normal =mat3(transpose(inverse(model)))* aNorm;
    ViewPos = inverse(view)[3].xyz;
         
 


} 